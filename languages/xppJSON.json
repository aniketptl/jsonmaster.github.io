{
  "modelStart": "\n{\n",
  "reservedKeywords": [
    "abstract",
    "as",
    "base",
    "boolean",
    "break",
    "byte",
    "case",
    "catch",
    "char",
    "checked",
    "class",
    "const",
    "continue",
    "real",
    "default",
    "delegate",
    "do",
    "double",
    "else",
    "enum",
    "event",
    "explicit",
    "extern",
    "false",
    "finally",
    "fixed",
    "float",
    "for",
    "foreach",
    "goto",
    "if",
    "implicit",
    "in",
    "int",
    "interface",
    "internal",
    "is",
    "lock",
    "long",
    "namespace",
    "new",
    "null",
    "object",
    "operator",
    "out",
    "override",
    "params",
    "private",
    "protected",
    "public",
    "readonly",
    "ref",
    "return",
    "sbyte",
    "sealed",
    "short",
    "sizeof",
    "stackalloc",
    "static",
    "str",
    "struct",
    "switch",
    "this",
    "throw",
    "true",
    "try",
    "typeof",
    "uint",
    "ulong",
    "unchecked",
    "unsafe",
    "ushort",
    "using",
    "virtual",
    "void",
    "volatile",
    "while"
  ],

  "dataTypes": {
    "arrayType": "List",
    "generic": "object",
    "string": "str",
    "boolean": "boolean",
    "float": "real",
    "doubleType": "real",
    "characterType": "real",
    "longType": "long",
    "int": "int"
  },

  "modelDefinition": "\n[DataContract]\npublic class <!ModelName!> ",
  "fileExtension": "cs",
  "instanceVarDefinition": "\n\tprivate <!VarType!> <!VarName!>;",
  "modelEnd": "\n}",
  "staticImports": "",
  "supportsCamelcasing": true,
  "methods": {
    "others": {
      "getterSetter": {
        "name": "DataMembers",
        "signature": "",
        "bodyStart": "",
        "bodyEnd": "",
        "codeForEachProperty": "\n\t[DataMember]\n\tpublic void <!CapitalizedVarName!>(<!VarType!> _<!VarName!> = <!VarName!>) {\n\t\t<!VarName!> = _<!VarName!>;\n\t\treturn <!VarName!>;\n\t}\n",
        "comment": "",
        "checked": "checked"
      }
    }
  },
  "exampleCode": ""
}